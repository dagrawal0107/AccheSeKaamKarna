<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase guid="1453225e-0b4c-4941-b681-c2f56d89e2e3" id="34">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" guid="630c4dc8-0fd3-4b54-90f3-ebd99d7cb2eb" name="ApexConnect" testItemId="1" title="Salesforce Connect: DevOrg (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">DevOrg</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">DevOrg</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">Sales</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" guid="8eaeb4b6-dc67-4064-a35a-44debd208701" name="ForEach" testItemId="5" title="For Each: {SourceData}=&gt;Student">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="SourceData"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">Student</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <parameterValueSources>
        <parameterValueSource variableName="SourceData" variableScope="Test">
          <cacheToken>C:\\Users\\deepak.agrawal\\Provar\\Workspace1\\Traning1\\templates\\Student.xlsx;1695207771159</cacheToken>
          <cachedParameters>
            <apiParam name="Name"/>
            <apiParam name="Class__c"/>
            <apiParam name="Fee__c"/>
            <apiParam name="SchoolName__c"/>
          </cachedParameters>
          <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
            <workbookPath class="value" valueClass="string">templates/Student.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">Student</worksheetName>
            <valuesRange class="value" valueClass="string">A1:D6</valuesRange>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
      <clauses>
        <clause name="substeps" testItemId="6">
          <steps>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexCreateObject" guid="12197c35-f642-4035-a493-c4a519b85bcb" name="ApexCreateObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand" testItemId="8" title="Create Object: Student__c=&gt;StudentId">
              <arguments>
                <argument id="objectType">
                  <value class="value" valueClass="string">Student__c</value>
                </argument>
                <argument id="resultIdName">
                  <value class="value" valueClass="string">StudentId</value>
                </argument>
                <argument id="apexConnectionName">
                  <value class="value" valueClass="string">DevOrg</value>
                </argument>
                <argument id="assignmentRuleId"/>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
                <argument id="Fee__c">
                  <value class="variable">
                    <path element="Student"/>
                    <path element="Fee__c"/>
                  </value>
                </argument>
                <argument id="SchoolName__c">
                  <value class="variable">
                    <path element="Student"/>
                    <path element="SchoolName__c"/>
                  </value>
                </argument>
                <argument id="Class__c">
                  <value class="variable">
                    <path element="Student"/>
                    <path element="Class__c"/>
                  </value>
                </argument>
                <argument id="Name">
                  <value class="variable">
                    <path element="Student"/>
                    <path element="Name"/>
                  </value>
                </argument>
              </arguments>
              <parameterGeneratorProperties>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.ConnectionName">DifferrentURL</propertyValue>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.CustomObjectName">Student__c</propertyValue>
              </parameterGeneratorProperties>
              <generatedParameters>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Fee__c" name="Fee__c" title="Fee__c"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=SchoolName__c" name="SchoolName__c" title="SchoolName__c"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Class__c" name="Class__c" title="Class__c"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Name" name="Name" title="Name"/>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexReadObject" guid="e6b038cf-4384-4d7a-8dd6-f171dbdf6821" name="ApexReadObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.ReadCustomObjectTestStepCommand" testItemId="16" title="Read Object: Student__c = {StudentId}">
              <arguments>
                <argument id="objectType">
                  <value class="value" valueClass="string">Student__c</value>
                </argument>
                <argument id="resultName">
                  <value class="value" valueClass="string">StudentRead</value>
                </argument>
                <argument id="apexConnectionName">
                  <value class="value" valueClass="string">DevOrg</value>
                </argument>
                <argument id="objectId">
                  <value class="variable">
                    <path element="StudentId"/>
                  </value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
              </arguments>
              <parameterGeneratorProperties>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.ReadCustomObjectTestStepCommand.ConnectionName">DifferrentURL</propertyValue>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.ReadCustomObjectTestStepCommand.CustomObjectName">Student__c</propertyValue>
              </parameterGeneratorProperties>
              <generatedParameters>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Id" name="Id" title="Student ID"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Name" name="Name" title="Students Name"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Fee__c" name="Fee__c" title="Fee"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=SchoolName__c" name="SchoolName__c" title="SchoolName"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Student__c&amp;field=Class__c" name="Class__c" title="Class"/>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" guid="f7d173b3-1e52-42e4-8465-0e3b16c70512" name="Write" testItemId="19" title="Write: {StudentRead}=&gt;templates/Student.xlsx">
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="StudentRead"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Append">
                    <workbookPath class="value" valueClass="string">templates/Student.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">StudentAppend</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/Student.xlsx</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" guid="cba8ce0a-ab1e-40ea-8d04-200c91bec73b" name="Write" testItemId="18" title="Write: {StudentRead}=&gt;templates/Student.xlsx">
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="StudentRead"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Append">
                    <workbookPath class="value" valueClass="string">templates/Student.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">StudentReplace</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/Student.xlsx</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" guid="78faa632-7dd8-4df9-b300-ef0bd747552d" name="Write" testItemId="21" title="Write: {StudentRead}=&gt;templates/Student.xlsx">
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="StudentRead"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Update">
                    <workbookPath class="value" valueClass="string">templates/Student.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">StudentCondition</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/Student.xlsx</value>
                </argument>
                <argument id="updateValueRange"/>
                <argument id="updateColumnNames">
                  <value class="value" valueClass="string">FirstRowOfRange</value>
                </argument>
                <argument id="updateMatchType">
                  <value class="value" valueClass="string">RowOrColNumber</value>
                </argument>
                <argument id="updateMatchLocator">
                  <value class="value" valueClass="string">80</value>
                </argument>
              </arguments>
              <generatedParameters>
                <apiParam group="result" name="updateValueRange" title="Values Range">
                  <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
                  <type>
                    <textType>
                      <constraints>
                        <valueConstraint name="disableTemplateEditor">true</valueConstraint>
                      </constraints>
                    </textType>
                  </type>
                </apiParam>
                <apiParam group="result" name="updateColumnNames" title="Column Names">
                  <summary>Identifies where the column names are in the spreadsheet:</summary>
                  <defaultValue>FirstRowOfRange</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" internal="true" name="updateMatchType" title="">
                  <summary/>
                  <defaultValue>RowOrColNumber</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
                  <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
                </apiParam>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" guid="ec3e7a38-d5e6-43cc-ac28-7e4f14845fda" name="Write" testItemId="20" title="Write: {StudentRead}=&gt;templates/Student.xlsx">
              <tags>
                <string>disabled</string>
              </tags>
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="StudentRead"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Update">
                    <workbookPath class="value" valueClass="string">templates/Student.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">StudentCondition</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/Student.xlsx</value>
                </argument>
                <argument id="updateValueRange"/>
                <argument id="updateColumnNames">
                  <value class="value" valueClass="string">FirstRowOfRange</value>
                </argument>
                <argument id="updateMatchType">
                  <value class="value" valueClass="string">MatchColumns</value>
                </argument>
                <argument id="updateMatchLocator">
                  <value class="eq">
                    <lhs class="variable">
                      <path element="Student"/>
                      <path element="Name"/>
                    </lhs>
                    <rhs class="value" valueClass="string">Ashwini</rhs>
                  </value>
                </argument>
              </arguments>
              <generatedParameters>
                <apiParam group="result" name="updateValueRange" title="Values Range">
                  <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
                  <type>
                    <textType>
                      <constraints>
                        <valueConstraint name="disableTemplateEditor">true</valueConstraint>
                      </constraints>
                    </textType>
                  </type>
                </apiParam>
                <apiParam group="result" name="updateColumnNames" title="Column Names">
                  <summary>Identifies where the column names are in the spreadsheet:</summary>
                  <defaultValue>FirstRowOfRange</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" internal="true" name="updateMatchType" title="">
                  <summary/>
                  <defaultValue>RowOrColNumber</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
                  <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
                </apiParam>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" guid="7396da89-1e84-4531-a33d-2a2df1d6c28a" name="Write" testItemId="12" title="Write: {StudentRead}=&gt;templates/Student.xlsx">
              <tags>
                <string>disabled</string>
              </tags>
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="StudentRead"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Update">
                    <workbookPath class="value" valueClass="string">templates/Student.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">StudentCondition</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/Student.xlsx</value>
                </argument>
                <argument id="updateValueRange"/>
                <argument id="updateColumnNames">
                  <value class="value" valueClass="string">FirstRowOfRange</value>
                </argument>
                <argument id="updateMatchType">
                  <value class="value" valueClass="string">RowOrColNumber</value>
                </argument>
                <argument id="updateMatchLocator">
                  <value class="value" valueClass="string">80</value>
                </argument>
              </arguments>
              <generatedParameters>
                <apiParam group="result" name="updateValueRange" title="Values Range">
                  <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
                  <type>
                    <textType>
                      <constraints>
                        <valueConstraint name="disableTemplateEditor">true</valueConstraint>
                      </constraints>
                    </textType>
                  </type>
                </apiParam>
                <apiParam group="result" name="updateColumnNames" title="Column Names">
                  <summary>Identifies where the column names are in the spreadsheet:</summary>
                  <defaultValue>FirstRowOfRange</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" internal="true" name="updateMatchType" title="">
                  <summary/>
                  <defaultValue>RowOrColNumber</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
                  <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
                </apiParam>
              </generatedParameters>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
