<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase guid="db2cbf67-6343-4499-9af0-f1cfcbdb5a33" id="0">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" guid="1eafc1a4-0350-43dd-9a4d-68f1d2bf0513" name="SetValues" testItemId="1" title="Set Values: Count">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">Count</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.DoWhile" guid="efa6efa9-8214-4e31-82fd-fb6fa2e269e5" name="DoWhile" testItemId="2" title="While: {Count &lt; 1000}">
      <arguments>
        <argument id="condition">
          <value class="lt">
            <lhs class="variable">
              <path element="Count"/>
            </lhs>
            <rhs class="value" valueClass="decimal">1000</rhs>
          </value>
        </argument>
        <argument id="counterName">
          <value class="value" valueClass="string">LoopCounter</value>
        </argument>
        <argument id="counterStart">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="counterEnd"/>
        <argument id="continueOnFailure">
          <value class="value" valueClass="boolean">true</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="3">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" guid="290d5396-7d7e-4829-aa86-b2a0026c4441" name="AssertValues" testItemId="4" title="Assert: 2 EqualTo 2">
              <arguments>
                <argument id="expectedValue">
                  <value class="value" valueClass="string">2</value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="actualValue">
                  <value class="value" valueClass="string">2</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" guid="8de93cac-a62d-4961-ad4e-4c35f5c92f9b" name="SetValues" testItemId="6" title="Set Values: Count">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">Count</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="add">
                          <lhs class="variable">
                            <path element="Count"/>
                          </lhs>
                          <rhs class="value" valueClass="decimal">1</rhs>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
